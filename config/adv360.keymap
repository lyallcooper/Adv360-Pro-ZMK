/* -*- mode: c -*- */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>

// Layers
#define BASE 0
#define NMAC 1
#define GAME 2
#define GRQW 3
#define KEYP 4
#define FUNC 5
#define MODS 6

#define XXX &none
#define ___ &trans

#define COMBO(k1, k2, bind) combo_ ## k1 ## _ ## k2 { \
bindings = <&kp bind>; key-positions = <k1 k2>; timeout-ms = <30>; layers = <0 1>; }

#define SLEEP LC(LG(Q))

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"
    #ifndef VERSION_MACRO
    macro_ver: macro_ver {
      compatible = "zmk,behavior-macro";
      label = "macro_version";
      #binding-cells = <0>;
      bindings = <&kp RET>;
    };
    #endif

    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick_tap_ms = <175>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    mtt: mod_tap_preferred {
      compatible = "zmk,behavior-hold-tap";
      label = "MOD_TAP_PREFERRED";
      #binding-cells = <2>;
      tapping-term-ms = <170>;
      quick-tap-ms = <200>;
      retro-tap;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    onepass: 1password_tap_dance {
      compatible = "zmk,behavior-tap-dance";
      label = "1P_TAP_DANCE";
      #binding-cells = <0>;
      tapping-term-ms = <300>;
      bindings = <&kp LG(LA(FSLH))>, <&kp LG(BSLH)>;
    };

    graveql: grave_equal {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp EQUAL>, <&kp GRAVE>;
      mods = <(MOD_LCTL)>;
    };
  };

  combos {
    compatible = "zmk,combos";
    COMBO(16, 17, LC(TAB));
    COMBO(12, 13, SLEEP);
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &graveql  &kp N1    &kp N2        &kp N3        &kp N4     &kp N5 &tog KEYP                                                          &mo MODS  &kp N6   &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W         &kp E         &kp R      &kp T  XXX                                                                &tog NMAC &kp Y    &kp U    &kp I     &kp O    &kp P    &kp BSLH
   &mt LCMD ESC   &kp A     &kp S         &kp D         &kp F      &kp G  XXX       &kp LCTRL &kp LALT             &kp RCTRL &kp RGUI        &kp GRAVE &kp H    &kp J    &kp K     &kp L    &kp SEMI &kp SQT
        &kp LPAR  &kp Z     &kp X         &kp C         &kp V      &kp B                      &kp HOME             &kp PG_UP                           &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RPAR
        &mo FUNC  &kp GRAVE &mt LCTRL CAPS &mt LALT LEFT &mt LCMD RIGHT        &mt LSHFT BSPC &mt LCMD DEL &kp SPACE &kp PG_DN &mt LALT ENTER &mtt LCTRL SPACE  &kp DOWN &kp UP    &kp LBKT &kp RBKT &onepass
      >;
    };

    not_mac {
      bindings = <
        &graveql  &kp N1    &kp N2        &kp N3        &kp N4     &kp N5 &tog KEYP                                                          &mo MODS  &kp N6   &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W         &kp E         &kp R      &kp T  &to GAME                                                           &to BASE  &kp Y    &kp U    &kp I     &kp O    &kp P    &kp BSLH
   &mt LCTRL ESC  &kp A     &kp S         &kp D         &kp F      &kp G  &to GRQW  &kp LCTRL &kp LALT             &kp RCTRL &kp RGUI        &kp GRAVE &kp H    &kp J    &kp K     &kp L    &kp SEMI &kp SQT
        &kp LPAR  &kp Z     &kp X         &kp C         &kp V      &kp B                      &kp HOME             &kp PG_UP                           &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RPAR
        &mo FUNC  &kp GRAVE &mt LCTRL CAPS &mt LWIN LEFT &mt LALT RIGHT        &mt LSHFT BSPC &mt LCMD DEL &kp SPACE &kp PG_DN &mt LALT ENTER &mtt LCTRL SPACE  &kp DOWN &kp UP    &kp LBKT &kp RBKT &onepass
      >;
    };

    game {
      bindings = <
        &graveql  &kp N1    &kp N2    &kp N3        &kp N4     &kp N5 XXX                                                                &mo MODS  &kp N6   &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W     &kp E         &kp R      &kp T  &to NMAC                                                           &to BASE  &kp Y    &kp U    &kp I     &kp O    &kp P    &kp BSLH
   &mt LCTRL ESC  &kp A     &kp S     &kp D         &kp F      &kp G  &to GRQW  &kp LCTRL &kp LALT             &kp RCTRL &kp RGUI        &kp GRAVE &kp H    &kp J    &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X     &kp C         &kp V      &kp B                      &kp HOME             &kp PG_UP                           &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RPAR
        &mo FUNC  &kp GRAVE &kp LCTRL &mt LWIN LEFT &mt LALT RIGHT             &kp SPACE &mt LCMD DEL &kp SPACE &kp PG_DN &mt LALT ENTER &mtt LCTRL SPACE  &kp DOWN &kp UP    &kp LBKT &kp RBKT &onepass
      >;
    };

    game_reverse_qwerty {
      bindings = <
        &graveql  &kp N1    &kp N2    &kp N3        &kp N4     &kp N5 XXX                                                                &mo MODS  &kp N6   &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W     &kp K         &kp S      &kp F  &to GAME                                                           &to BASE  &kp O    &kp I    &kp L     &kp SEMI &kp R    &kp BSLH
   &mt LCTRL ESC  &kp A     &kp D     &kp G         &kp E      &kp T  &to NMAC  &kp LCTRL &kp LALT             &kp RCTRL &kp RGUI        &kp GRAVE &kp H    &kp Y    &kp N     &kp U    &kp P    &kp SQT
        &kp LSHFT &kp Z     &kp X     &kp C         &kp V      &kp B                      &kp HOME             &kp PG_UP                           &kp J    &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &mo FUNC  &kp GRAVE &kp LCTRL &mt LWIN LEFT &mt LALT  RIGHT            &kp SPACE &mt LCMD DEL &kp SPACE &kp PG_DN &mt LALT ENTER &mtt LCTRL SPACE  &kp DOWN &kp UP    &kp LBKT &kp RBKT &onepass
      >;
    };

    keypad {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4    &kp N5 ___                                ___ &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R     &kp T  XXX                                XXX &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F     &kp G  XXX     ___ ___ ___ ___            XXX &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &kp LPAR  &kp Z     &kp X    &kp C    &kp V     &kp B              ___ ___                    &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RPAR
        &mo FUNC  &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT            ___ ___ ___ ___ ___  &kp KP_N0            ___        ___          &kp KP_DOT    &kp RBKT        &mo FUNC
      >;
    };
    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4   &kp F5 &kp F6 ___                          ___   &kp F7 &kp F8                    &kp F9 &kp F10 &kp F11 &kp F12
        ___    ___    ___    ___      ___    ___    XXX                          XXX   ___    ___                       ___    ___     ___     ___
        ___    ___    ___    ___      ___    ___    XXX      ___ ___ ___ ___     XXX   ___    ___                       ___    ___     ___     ___
        ___    ___    ___    ___      ___    ___                 ___ ___               ___    ___                       ___    ___     ___     ___
        ___    ___    ___    &kp C_RW &kp C_FF           ___ ___ ___ ___ ___ &kp C_PLAY_PAUSE &kp C_VOL_DN &kp C_VOL_UP ___    ___     ___
      >;
    };
    mod {
      bindings = <
        XXX   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 XXX                                                                 &trans                 &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 XXX
        XXX   XXX          XXX          XXX          XXX          XXX          &bootloader                                                         &bootloader            XXX          &out OUT_USB XXX          XXX          XXX          XXX
        XXX   XXX          XXX          XXX          XXX          XXX          &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR &bt BT_CLR &bt BT_CLR &bt BT_CLR &rgb_ug RGB_MEFS_CMD 5 XXX          XXX          XXX          XXX          XXX          XXX
        XXX   XXX          XXX          XXX          XXX          &out OUT_BLE                                    XXX        XXX                                          XXX          XXX          XXX          XXX          XXX          XXX
        XXX   XXX          XXX          &bl BL_INC   &bl BL_DEC                        &rgb_ug RGB_TOG &bl BL_TOG XXX        XXX        &bl BL_TOG &rgb_ug RGB_TOG                     &bl BL_INC   &bl BL_DEC   XXX          XXX          XXX
      >;
    };
  };
};
